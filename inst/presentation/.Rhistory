params <- function(wavelength, ntheta=300)
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
theta = seq(70, 78, length=ntheta)[-c(1, ntheta)] * pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, ntheta=10){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, ntheta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = p[['theta']]*180/pi,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test <- raman_enhancement(shift = seq(-1000, 1000, length=200),ntheta=100)
p <-
ggplot(test, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p
ggplot(test, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle") +
theme_minimal()
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
params <- function(wavelength, ntheta=300)
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
theta = seq(70, 78, length=ntheta)[-c(1, ntheta)] * pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, ntheta=10){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, ntheta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = p[['theta']]*180/pi,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20),ntheta=100)
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200),ntheta=10)
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle") +
theme_minimal()
grid.arrange(p1,p2)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
params <- function(wavelength, ntheta=300)
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
theta = seq(70, 78, length=ntheta)[-c(1, ntheta)] * pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, ntheta=10){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, ntheta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = p[['theta']]*180/pi,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20),ntheta=100)
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200),ntheta=10)
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle") +
theme_minimal()
grid.arrange(p1,p2,ncol=1)
grid.arrange(p1,p2,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, ntheta=300)
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
theta = seq(70, 78, length=ntheta)[-c(1, ntheta)] * pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, ntheta=10){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, ntheta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = p[['theta']]*180/pi,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20),ntheta=100)
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200),ntheta=10)
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
theta =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
refl <- with(params(568),
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = theta, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20), seq(70, 78, length=200))
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200), seq(70, 78, length=10))
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
refl <- with(params(568),
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20), theta=seq(70, 78, length=200))
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200), theta=seq(70, 78, length=10))
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,nrow=1)
str(refl)
refl <- with(params(568), data.frame(theta = angle, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p0
refl <- with(params(568), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p0
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=20), theta=seq(60, 80, length=200))
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200), theta=seq(60, 80, length=10))
refl <- with(params(568,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
test1 <- raman_enhancement(shift = seq(-1000, 1000, length=10), theta=seq(60, 80, length=200))
test2 <- raman_enhancement(shift = seq(-1000, 1000, length=200), theta=seq(60, 80, length=20))
refl <- with(params(568,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
wvl <- 633
test1 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=10), theta=seq(60, 80, length=200))
test2 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=200), theta=seq(60, 80, length=20))
refl <- with(params(wvl,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
guides(colour=guide_legend()) +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
wvl <- 633
test1 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=10), theta=seq(60, 80, length=200))
test2 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=200), theta=seq(60, 80, length=20))
refl <- with(params(wvl,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
wvl <- 633
test1 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=10), theta=seq(60, 80, length=200))
test2 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=200), theta=seq(65, 75, length=20))
refl <- with(params(wvl,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
library(planar)
require(reshape2)
library(ggplot2)
library(gridExtra)
theme_set(theme_minimal())
params <- function(wavelength, theta=seq(70, 78, length=200))
list(lambda = wavelength,
epsilon =list(1.5^2, epsAg(wavelength)$epsilon, 1.33^2),
angle =  theta* pi/180,
thickness = c(0, 50, 0),
d = 1,
polarisation = 'p')
raman_enhancement <- function(wavelength = 568, shift=0, theta=seq(70, 78, length=200)){
wvl <- raman.shift(wavelength, shift)
p <- params(wvl, theta)
Mstokes <- with(p,
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon))
res <- Mstokes[['Mr.perp']][[2]]
data.frame(theta = theta,
Mperp = c(t(res)), shift = rep(shift, each=ncol(res)))
}
wvl <- 633
test1 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=10), theta=seq(65, 75, length=200))
test2 <- raman_enhancement(wvl, shift = seq(-1000, 1000, length=200), theta=seq(65, 75, length=20))
refl <- with(params(wvl,theta=seq(60, 80, length=200)), data.frame(theta = angle*180/pi, R=
multilayer(lambda = lambda, theta = angle, polarisation = polarisation,
thickness = thickness, d = d,
epsilon = epsilon)$R))
p0 <- ggplot(refl,aes(theta,R)) +
geom_line()
p1 <-
ggplot(test1, aes(theta, Mperp, colour=shift,group=shift)) +
geom_line()
p2 <-
ggplot(test2, aes(shift, Mperp, colour=theta, group=theta)) +
geom_line() +
labs(x = expression("Raman shift /"*cm^-1), colour="Angle")
grid.arrange(p1,p2,p0,nrow=1)
str(res$V1)
unique(res$V1)
k0
str(s1)
str(res)
source('~/.active-rstudio-document', echo=TRUE)
library(knitr)
knit('presentation.rmd')
setwd("~/Documents/r/github/cda/inst/presentation")
knit('presentation.rmd')
library(pandoc)
install.packages("pandoc")
library(markdown)
install.packages("markdown")
library(markdown)
markdownToHTML("presentation.md")
getwd()
markdownToHTML("presentation.md")
markdownToHTML("presentation.md",'test.html')
markdownToHTML("presentation.md",'test.html',options=markdownHTMLOptions(base64_images=FALSE))
markdownToHTML("presentation.md",'test.html',options=setdiff(markdownHTMLOptions(), "base64_images"))
markdownToHTML("presentation.md",'test.html',options=markdownHTMLOptions())
```
markdownHTMLOptions()
markdownToHTML("presentation.md",'test.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
knit('presentation.rmd')
markdownToHTML("presentation.md",'test.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
knit('presentation.rmd')
markdownToHTML("presentation.md",'test.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
knit('presentation.rmd')
markdownToHTML("presentation.md",'test.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
markdownToHTML("presentation.md",'presentation.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
knit('presentation.rmd')
markdownToHTML("presentation.md",'presentation.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
knit('presentation.rmd')
markdownToHTML("presentation.md",'presentation.html',options=c("toc" , "use_xhtml" ,"smartypants","highlight_code"))
